---
import Layout from "@layouts/Layout.astro";
import Pagination from "@components/Pagination.astro";
import { Image } from "astro:assets";
// import authorImage from "../assets/me.jpg"; <-- for author
import type { ImageMetadata } from "astro";
// import { author } from "@data/constants"; <-- for author
import { Icon } from "astro-icon/components";
import Toast from "@components/Toast.astro";

interface Props {
  title: string;
  description: string;
  image: ImageMetadata;
  imageAlt: string;
  pubDate: Date;
  url: string;
  updatedDate: Date | undefined;
  readingTime: string;
}

const {
  title,
  description,
  image,
  imageAlt,
  pubDate,
  // url,
  updatedDate,
  readingTime,
} = Astro.props;

// const ogImage = {
//   src: `/image/${url}.png`,
//   alt: title,
// };



const fullPubDate = pubDate.toLocaleDateString("en", {
  dateStyle: "full",
});

const fullUpdatedDate = updatedDate?.toLocaleDateString("en", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
---

<Layout
  title={title}
  description={description}
  
  pubDate={updatedDate ?? pubDate}
>
  <header class="flex flex-col mb-8">
    <time
      datetime={pubDate.toISOString()}
      class="block mb-4 text-sm sm:text-base"
    >
      {fullPubDate}
      <span>
        <span aria-hidden="true"> â€¢</span>
        {readingTime}
      </span>
    </time>
    <h1
      class="text-2xl sm:text-4xl pb-8 font-bold dark:text-zinc-100 text-zinc-950"
    >
      {title}
    </h1>
    <!-- <div class="flex gap-2 mb-8">
      <div class="aspect-square rounded-full overflow-hidden">
        <Image
          src={authorImage}
          alt="The author of this blog doing a pose"
          loading="eager"
          class="aspect-square w-10"
          width={80}
          height={80}
        />
      </div>
      <p class="dark:text-zinc-400 text-zinc-700 text-sm">
        <span class="block font-semibold">{author}</span>
        <a
          class="dark:text-zinc-50 text-zinc-00 hover:underline block"
          href="https://github.com/exylons"
          target="_blank"
          rel="noopener noreferrer"
          >@exylons
        </a>
      </p>
    </div> Uncomment for author -->

    <!-- Hero image -->
    <Image
      src={image}
      alt={imageAlt}
      loading="eager"
      class="rounded-lg"
      width={1200}
      height={630}
    />
  </header>
  {
    updatedDate && (
      <article class="dark:text-zinc-200 text-zinc-800 py-2 px-4 mb-6 rounded-md text-sm sm:text-base border border-zinc-500 bg-zinc-600/20">
        <span class="font-semibold">Last updated: </span>
        {fullUpdatedDate}
      </article>
    )
  }
  <article
    class="prose max-w-none dark:prose-invert dark:prose-code:text-zinc-300 dark:prose-a:text-zinc-300 prose-a:text-zinc-600 prose-a:underline prose-a:decoration-zinc-500 hover:prose-a:decoration-zinc-300 prose-a:underline-offset-4 dark:prose-headings:text-zinc-100 prose-img:rounded-lg"
  >
    <slot />
    <hr />
  </article>
  <ul class="mt-4 flex max-sm:flex-col sm:justify-between gap-2 sm:gap-1">
    <li title="Copy the link of this article">
      <button
        id="copy"
        class="dark:hover:text-zinc-50 hover:text-zinc-950 transition-colors flex flex-row items-center"
      >
        <Icon name="share" size={16} class="mr-1" />
        Share this article</button
      >
    </li>
    <li>
      <a
        href={`/blog/`}
        class="dark:hover:text-zinc-50 hover:text-zinc-950 transition-colors flex flex-row sm:justify-start sm:flex-row-reverse items-center"
        ><Icon name="edit" size={16} class="sm:ml-1 max-sm:mr-1" />Return to blog index</a
      >
    </li>
  </ul>
  <Toast
    icon="share"
    description="Link copied to clipboard."
    idList="toast-share"
  />
  <Pagination />
</Layout>
<script is:inline async>
  document.getElementById("copy").addEventListener("click", function () {
    let copyText = window.location.href;
    let toastElement = document.getElementById("toast-share");

    navigator.clipboard.writeText(copyText).then(() => {
      toastElement.classList.remove("!invisible");
      setTimeout(() => {
        toastElement.classList.add("!invisible");
      }, 2500);
    });
  });
</script>
<script>
  import mediumZoom from 'medium-zoom';

  mediumZoom('img', {
    margin: 16,
    background: "#00000095",
  });
</script>
